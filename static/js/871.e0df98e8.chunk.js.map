{"version":3,"file":"static/js/871.e0df98e8.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, useContext(LazyContext).strict, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { addDomEvent, useDomEvent } from '../events/use-dom-event.mjs';\nimport { extractEventInfo } from '../events/event-info.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    function onPointerStart(event, info) {\n        var _a;\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }\n    const callbackDependencies = [\n        Boolean(onTapStart),\n        Boolean(onTap),\n        Boolean(whileTap),\n        visualElement,\n    ];\n    const startPress = useCallback((event, info) => {\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        onPointerStart(event, info);\n    }, callbackDependencies);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    const startAccessiblePress = useCallback(() => {\n        const stopKeydownListener = addDomEvent(visualElement.current, \"keydown\", (event) => {\n            if (event.key !== \"Enter\" || isPressing.current)\n                return;\n            isPressing.current = true;\n            cancelPointerEndListeners.current = addDomEvent(visualElement.current, \"keyup\", () => {\n                if (event.key !== \"Enter\" || !checkPointerEnd())\n                    return;\n                fireSyntheticPointerEvent(\"up\", visualElement.getProps().onTap);\n            }, eventOptions);\n            fireSyntheticPointerEvent(\"down\", onPointerStart);\n        });\n        const stopBlurListener = addDomEvent(visualElement.current, \"blur\", () => {\n            stopKeydownListener();\n            stopBlurListener();\n            if (isPressing.current) {\n                fireSyntheticPointerEvent(\"cancel\", onPointerCancel);\n            }\n        });\n    }, callbackDependencies);\n    useDomEvent(visualElement, \"focus\", hasPressListeners ? startAccessiblePress : undefined);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useRef, useCallback } from 'react';\n\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const isFocusActive = useRef(false);\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = visualElement.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, true);\n        isFocusActive.current = true;\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        if (!isFocusActive.current || !animationState)\n            return;\n        animationState.setActive(AnimationType.Focus, false);\n        isFocusActive.current = false;\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.2\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.2\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_superPropBase","object","property","Object","prototype","hasOwnProperty","call","getPrototypeOf","_get","Reflect","get","bind","target","receiver","base","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread2","i","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_objectWithoutProperties","excluded","sourceSymbolKeys","indexOf","propertyIsEnumerable","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","render","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","LayoutGroupContext","VisualElementHandler","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","callback","info","setActive","Hover","isNodeOrChild","child","parentElement","useUnmountEffect","combineFunctions","pipe","transformers","reduce","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","requestAnimationFrame","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTapCancel","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","onPointerStart","latestProps","callbackDependencies","startPress","startAccessiblePress","stopKeydownListener","stopBlurListener","whileFocus","isFocusActive","onFocus","isFocusVisible","matches","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","cancel","index","splice","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig"],"sourceRoot":""}