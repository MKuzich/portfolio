{"version":3,"file":"static/js/222.04ae38cc.chunk.js","mappings":"qSAGaA,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC5BC,GAAOC,EAAAA,EAAAA,GAAc,qBAC3B,OACE,UAACC,EAAA,EAAD,CAAOC,UAAU,MAAMC,WAAW,SAAlC,WACE,SAACC,EAAA,EAAD,UAAaN,KACb,SAACO,EAAA,EAAD,CACEC,UAAU,IACVC,KAAMV,EACNW,OAAO,SACPC,GAAI,CACFC,WAAY,EACZC,MAAO,OACP,IAAK,CAAEC,WAAY,eACnB,UAAW,CAAED,MAAO,WACpBE,cAAe,OATnB,UAYE,SAAC,MAAD,CAAgBC,KAAMf,EAAO,UAAY,aAIhD,E,UCgDD,EAhEgB,WACd,IAAQgB,GAAcC,EAAAA,EAAAA,MAAdD,UACR,GAAkBE,EAAAA,EAAAA,UAChBC,EAAAA,EAAAA,MAAc,SAAAC,GAAO,OAAIA,EAAQC,KAAOL,CAAnB,KADhBI,GAAP,eAIQE,EACNF,EADME,KAAMC,EACZH,EADYG,KAAMC,EAClBJ,EADkBI,YAAaC,EAC/BL,EAD+BK,UAAWC,EAC1CN,EAD0CM,SAAUC,EACpDP,EADoDO,aAAcC,EAClER,EADkEQ,OAGpE,OACE,gCACE,SAACC,EAAA,EAAD,KACA,SAACC,EAAA,EAAD,CAAWpB,GAAI,CAAEqB,GAAI,IAArB,SACGX,IACC,UAAClB,EAAA,EAAD,CAAO8B,IAAK,EAAZ,WACE,SAAC3B,EAAA,EAAD,CACE4B,QAAQ,WACRvB,GAAI,CACFwB,SAAU,CACRC,IAAK,SACLC,GAAI,SACJC,GAAI,UAENzB,MAAO,QARX,SAWGU,KAEH,SAACpB,EAAA,EAAD,CAAOC,UAAU,MAAMmC,SAAS,OAAON,IAAK,EAA5C,SACGT,EAAKgB,KAAI,SAAAC,GAAG,OACX,SAACC,EAAA,EAAD,CACE/B,GAAI,CAAEE,MAAO,QAEbA,MAAM,YACN8B,MAAOF,GAFFlB,EAAOkB,EAHH,OASf,SAACnC,EAAA,EAAD,UAAamB,KACb,UAACtB,EAAA,EAAD,WACGuB,IACC,SAAC5B,EAAD,CAAaC,KAAM2B,EAAW1B,KAAK,sBAEpC2B,IACC,SAAC7B,EAAD,CAAaC,KAAM4B,EAAU3B,KAAK,qBAEnC4B,IACC,SAAC9B,EAAD,CAAaC,KAAM6B,EAAc5B,KAAK,4BAG1C,SAAC4C,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGjB,EAAOW,KAAI,SAACC,EAAKM,GAAN,OACV,SAACH,EAAA,GAAD,CAAMI,GAAI,EAAGC,GAAI,EAAGX,GAAI,EAAGY,MAAI,EAA/B,UACE,gBAAKC,IAAKV,EAAKW,IAAKC,EAAAA,MADe,MAAQN,EADnC,aAWzB,C","sources":["components/ProjectLink/ProjectLink.jsx","pages/Project/Project.jsx"],"sourcesContent":["import { Typography, Stack, IconButton, useMediaQuery } from '@mui/material';\nimport { TbExternalLink } from 'react-icons/tb';\n\nexport const ProjectLink = ({ link, text }) => {\n  const isMd = useMediaQuery('(min-width:900px)');\n  return (\n    <Stack direction=\"row\" alignItems=\"center\">\n      <Typography>{text}</Typography>\n      <IconButton\n        component=\"a\"\n        href={link}\n        target=\"_blank\"\n        sx={{\n          flexShrink: 0,\n          color: '#fff',\n          '&': { transition: 'color 300ms' },\n          '&:hover': { color: '#8bc34a' },\n          verticalAlign: 'top',\n        }}\n      >\n        <TbExternalLink size={isMd ? '1.25rem' : '1rem'} />\n      </IconButton>\n    </Stack>\n  );\n};\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Typography, Stack, Chip, Grid } from '@mui/material';\nimport { projects } from 'data/projects';\nimport { BackButton } from '../../components/BackButton/BackButton';\nimport { ProjectLink } from 'components/ProjectLink/ProjectLink';\nimport { ClassNames } from '@emotion/react';\n\nconst Project = () => {\n  const { projectId } = useParams();\n  const [project] = useState(\n    projects.find(project => project.id === projectId)\n  );\n\n  const { name, tech, description, frontLink, backLink, deployedLink, images } =\n    project;\n\n  return (\n    <section>\n      <BackButton />\n      <Container sx={{ py: 10 }}>\n        {project && (\n          <Stack gap={7}>\n            <Typography\n              variant=\"homeLink\"\n              sx={{\n                fontSize: {\n                  xxs: '20vmin',\n                  xs: '15vmin',\n                  lg: '18vmin',\n                },\n                color: '#fff',\n              }}\n            >\n              {name}\n            </Typography>\n            <Stack direction=\"row\" flexWrap=\"wrap\" gap={1}>\n              {tech.map(itm => (\n                <Chip\n                  sx={{ color: '#fff' }}\n                  key={name + itm}\n                  color=\"secondary\"\n                  label={itm}\n                />\n              ))}\n            </Stack>\n            <Typography>{description}</Typography>\n            <Stack>\n              {frontLink && (\n                <ProjectLink link={frontLink} text=\"To front end repo\" />\n              )}\n              {backLink && (\n                <ProjectLink link={backLink} text=\"To back end repo\" />\n              )}\n              {deployedLink && (\n                <ProjectLink link={deployedLink} text=\"To deployed project\" />\n              )}\n            </Stack>\n            <Grid container spacing={2}>\n              {images.map((itm, idx) => (\n                <Grid sm={6} md={4} lg={3} item key={'img' + idx}>\n                  <img src={itm} alt={ClassNames} />\n                </Grid>\n              ))}\n            </Grid>\n          </Stack>\n        )}\n      </Container>\n    </section>\n  );\n};\n\nexport default Project;\n"],"names":["ProjectLink","link","text","isMd","useMediaQuery","Stack","direction","alignItems","Typography","IconButton","component","href","target","sx","flexShrink","color","transition","verticalAlign","size","projectId","useParams","useState","projects","project","id","name","tech","description","frontLink","backLink","deployedLink","images","BackButton","Container","py","gap","variant","fontSize","xxs","xs","lg","flexWrap","map","itm","Chip","label","Grid","container","spacing","idx","sm","md","item","src","alt","ClassNames"],"sourceRoot":""}